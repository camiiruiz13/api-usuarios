service: api-usuarios
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  deploymentMethod: direct
  role: arn:aws:iam::423889617242:role/lambda-execution-role
  environment:
    USERS_TABLE: api_usuarios
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:Scan
            - dynamodb:Query
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:us-east-1:423889617242:table/api_usuarios
            - arn:aws:dynamodb:us-east-1:423889617242:table/api_usuarios/index/EmailIndex
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:us-east-1:423889617242:*

functions:
  getUsers:
    handler: src/index.getUsers
    events:
      - http:
          path: users
          method: get
          cors: true

  createUser:
    handler: src/index.createUser
    events:
      - http:
          path: users
          method: post
          cors: true

  getUserByEmail:
    handler: src/index.getUserByEmail
    events:
      - http:
          path: users/{email}
          method: get
          cors: true

resources:
  Resources:
    ApiUsuariosTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: api_usuarios
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
